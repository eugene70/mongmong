{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"E:\\\\mongmong\\\\DailySummary\\\\client\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport HeaderLayout from './components/HeaderLayout';\nimport Write from './components/Post/Write/Write';\nimport { Route, Switch, Link, withRouter, Redirect } from 'react-router-dom';\nimport NormalLoginForm from './components/Login/Login';\nimport PostList from './components/Post/PostList/PostList';\nimport NotFound from './components/NotFound';\nimport Settings from './components/Settings';\nimport SignUp from './components/Login/SignUp';\nimport Unsubscribe from './components/Login/Unsubscribe';\nimport Review from './components/Post/Write/Review';\nimport Summary from './components/Post/Summary/Summary';\nimport axios from 'axios';\nimport { LoginContext } from './contexts/login';\nconst Sider = _Layout.Sider,\n      Content = _Layout.Content,\n      Footer = _Layout.Footer;\nconst SubMenu = _Menu.SubMenu;\nconst MonthPicker = _DatePicker.MonthPicker;\n\nconst config = require('./config');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setIsLogined = isLogined => {\n      this.setState({\n        isLogined\n      });\n    };\n\n    this.onCollapse = collapsed => {\n      console.log(collapsed);\n      this.setState({\n        collapsed\n      });\n    };\n\n    this.pickedMonth = (date, dateString) => {\n      const dateStr = dateString.replace(/-/g, '');\n      const url = '/posts/' + dateStr.substring(0, 4) + '/' + dateStr.substring(4, 6);\n      console.log(url);\n      this.props.history.push(url);\n    };\n\n    this.pickedDate = (date, dateString) => {\n      const dateStr = dateString.replace(/-/g, '');\n      const url = '/summary/' + dateStr.substring(0, 4) + '/' + dateStr.substring(4, 6) + '/' + dateStr.substring(6, 8);\n      console.log(url);\n      this.props.history.push(url);\n    };\n\n    this.showModal = () => {\n      console.log(\"showModal\");\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(e);\n      localStorage.removeItem(\"token\");\n      this.setState({\n        visible: false,\n        isLogined: false\n      });\n      this.props.history.push('/');\n    };\n\n    this.handleCancel = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log('cancel clicked');\n      console.log(this.state);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      collapsed: false,\n      visible: false,\n      isLogined: localStorage.getItem('token') ? true : false\n    }; // this.onChange = this.onChange.bind(this)\n    //this.showModal = this.showModal.bind(this)\n    //this.handleOk = this.handleOk.bind(this)\n    //this.handleCancel = this.handleCancel.bind(this)\n  }\n\n  // writeBtnClicked = e => {\n  //   console.log(e)\n  //   if(this.state.isLogined) {\n  //     this.props.history.push('/post/write')\n  //   } else {\n  //     this.props.history.push('/login')\n  //   }\n  // }\n  render() {\n    return React.createElement(LoginContext.Provider, {\n      value: {\n        setIsLogined: this.setIsLogined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(_Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      breakpoint: \"lg\",\n      collapsedWidth: \"0\",\n      onBreakpoint: broken => {\n        console.log(broken);\n      },\n      onCollapse: (collapsed, type) => {\n        console.log(collapsed, type);\n      },\n      className: \"one-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one-menu-logo flex flex-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"\\uBABD \\uAE00\"))), React.createElement(_Menu, {\n      theme: \"light\",\n      mode: \"inline\",\n      className: \"one-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(_Menu.Item, {\n      key: \"1\",\n      className: \"menuWrite\",\n      onClick: this.writeBtnClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/post/write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"nav-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"\\uAE00\\uC4F0\\uAE30\"))), React.createElement(SubMenu, {\n      key: \"Sub1\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"\\uBCF8\\uBB38\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(_Menu.Item, {\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      onChange: this.pickedMonth,\n      placeholder: \"Select month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"nav-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(SubMenu, {\n      key: \"Sub2\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\uC694\\uC57D\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(_Menu.Item, {\n      key: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(_DatePicker, {\n      onChange: this.pickedDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"nav-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(_Menu.Item, {\n      key: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"nav-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\uC124\\uC815\"))), React.createElement(_Menu.Item, {\n      key: \"5\",\n      className: \"one-logout\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"nav-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"), React.createElement(_Modal, {\n      title: \"Basic Modal\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"), \"   \"))), React.createElement(_Layout, {\n      className: \"one-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(HeaderLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(Content, {\n      className: \"Content-section-layout one-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.isLogined ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:year/:month/:day\",\n      component: PostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:year/:month\",\n      component: PostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:year\",\n      component: PostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts\",\n      component: PostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/post/write\",\n      component: Write,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/post/:view\",\n      component: Review,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/summary/:year/:month/:day\",\n      component: Summary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/summary\",\n      component: Summary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/setting\",\n      component: Settings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/unsubscribe\",\n      component: Unsubscribe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })) : React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:year/:month/:day\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:year/:month\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:year\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/post/write\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/post/:view\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/summary/:year/:month/:day\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/summary\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/setting\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/unsubscribe\",\n      component: NormalLoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"\\u3141\\u3157\\u3147\\u3131\\u3161\\u3139 \\xA92019 Created by \\uD55C:\\uAE00\")))));\n  }\n\n}\n\n;\nexport default withRouter(App); //로그인, 로그아웃 등 기능하는 버젼/ 사이드바 메뉴 수정 전 임시 주석처리\n// import React, { Component, Fragment } from 'react'\n// import './App.scss'\n// import Home from './components/Home/Home'\n// import HeaderLayout from './components/HeaderLayout'\n// import Write from './components/Post/Write/Write'\n// import { Route, Switch, Link, withRouter, Redirect } from 'react-router-dom'\n// import NormalLoginForm from './components/Login/Login'\n// import { Modal, Layout, Menu, Icon, DatePicker } from 'antd'\n// import PostList from './components/Post/PostList/PostList'\n// import NotFound from './components/NotFound'\n// import Settings from './components/Settings'\n// import SignUp from './components/Login/SignUp'\n// import Unsubscribe from './components/Login/Unsubscribe'\n// import Review from './components/Post/Write/Review'\n// import Summary from './components/Post/Summary/Summary'\n// import axios from 'axios'\n// import { LoginContext } from './contexts/login'\n// const { Sider, Content, Footer } = Layout\n// const { SubMenu } = Menu\n// const { MonthPicker } = DatePicker;\n// const config = require('./config');\n// class App extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       collapsed: false,\n//       visible: false,\n//       isLogined: localStorage.getItem('token') ? true : false,\n//     }\n//     // this.onChange = this.onChange.bind(this)\n//     //this.showModal = this.showModal.bind(this)\n//     //this.handleOk = this.handleOk.bind(this)\n//     //this.handleCancel = this.handleCancel.bind(this)\n//   }\n//   setIsLogined = (isLogined) => {\n//     this.setState({ isLogined })\n//   }\n//   onCollapse = (collapsed) => {\n//     console.log(collapsed)\n//     this.setState({ collapsed })\n//   }\n//   pickedMonth = (date, dateString) => {\n//     const dateStr = dateString.replace(/-/g, '');\n//     const url = '/posts/' + dateStr.substring( 0, 4 ) + \n//                 '/' + dateStr.substring( 4, 6 );\n//     console.log(url);\n//     this.props.history.push(url);\n//   }\n//   pickedDate = (date, dateString) => {\n//     const dateStr = dateString.replace(/-/g, '');\n//     const url = '/summary/' + dateStr.substring( 0, 4 ) + \n//                 '/' + dateStr.substring( 4, 6 ) + \n//                 '/' + dateStr.substring( 6, 8 );\n//     console.log(url);\n//     this.props.history.push(url);\n//   }\n//   showModal = () => {\n//     console.log(\"showModal\");\n//     this.setState({\n//       visible: true,\n//     });     \n//   };\n//   handleOk = e => {\n//     e.preventDefault();\n//     e.stopPropagation();\n//     console.log(e);\n//     localStorage.removeItem(\"token\")\n//     this.setState({\n//       visible: false,\n//       isLogined: false,\n//     });\n//     this.props.history.push('/')\n//   };\n//   handleCancel = e => {\n//     e.preventDefault();\n//     e.stopPropagation();\n//     console.log('cancel clicked');\n//     console.log(this.state);\n//     this.setState({\n//       visible: false,\n//     });\n//   };\n//   render () {\n//     return (\n//       <LoginContext.Provider value={{\n//         setIsLogined: this.setIsLogined,\n//       }}>\n//         <Fragment>\n//         {/* Sider, Header, Footer는 모든 화면에 보여진다.  */}\n//           <Layout>\n//             <Sider\n//               breakpoint=\"lg\"\n//               collapsedWidth=\"0\"\n//               onBreakpoint={broken => {\n//                 console.log(broken)\n//               }}\n//               onCollapse={(collapsed, type) => {\n//                 console.log(collapsed, type)\n//               }}\n//               className=\"one-sidebar\"\n//             >\n//             <div className=\"one-menu-logo flex flex-center\"  >\n//               <Link to=\"/\">\n//                 <span>몽 글</span>\n//               </Link>\n//             </div>\n//               <Menu theme=\"light\" mode=\"inline\" className=\"one-nav\">\n//                 <Menu.Item key=\"1\">\n//                   <Link to=\"/post/write\">\n//                     <Icon type=\"form\" />\n//                     <span className=\"nav-text\">글쓰기</span>\n//                   </Link>\n//                 </Menu.Item>\n//                 <SubMenu\n//                   key=\"Sub1\"\n//                   title={\n//                     <span>\n//                       <Icon type=\"read\" />\n//                       <span>본문</span>\n//                     </span>\n//                   }\n//                 >\n//                   <Menu.Item key=\"2\">\n//                       <MonthPicker\n//                         onChange={this.pickedMonth}\n//                         placeholder=\"Select month\" />\n//                   <span className=\"nav-text\"></span>\n//                   </Menu.Item>\n//                 </SubMenu>\n//                 <SubMenu\n//                   key=\"Sub2\"\n//                   title={\n//                     <span>\n//                       <Icon type=\"edit\" />\n//                       <span>요약</span>\n//                     </span>\n//                   }\n//                 >\n//                   <Menu.Item key=\"3\">\n//                       <DatePicker\n//                         onChange={this.pickedDate}\n//                       />\n//                   <span className=\"nav-text\"></span>\n//                   </Menu.Item>\n//                 </SubMenu>\n//                 <Menu.Item key=\"4\">\n//                   <Link to=\"/setting\">\n//                     <Icon type=\"setting\" />\n//                     <span className=\"nav-text\">설정</span>\n//                   </Link>\n//                 </Menu.Item>\n//                 <Menu.Item key=\"5\"\n//                   className=\"one-logout\"\n//                   onClick={this.showModal}\n//                   >\n//                     <Icon type=\"logout\" />\n//                     <span className=\"nav-text\">\n//                       로그아웃\n//                     </span>\n//                     <Modal\n//                       title=\"Basic Modal\"\n//                       visible={this.state.visible}\n//                       onOk={this.handleOk}\n//                       onCancel={this.handleCancel}\n//                     >\n//                       로그아웃 하시겠습니까?\n//                     </Modal>   {/* 로그아웃 클릭시 로그인 버튼으로 전환 및 연동 부분 추가 */}\n//                 </Menu.Item>\n//               </Menu>\n//             </Sider>\n//             <Layout className=\"one-main\">\n//               <HeaderLayout />\n//               <Content className=\"Content-section-layout one-content\">\n//                 {/* {\n//                   this.state.isLogined ? (  */}\n//                     <Switch>\n//                       <Route exact path=\"/\" component={Home} />\n//                       <Route path=\"/posts/:year/:month/:day\" component={PostList} />\n//                       <Route path=\"/posts/:year/:month\" component={PostList} />\n//                       <Route path=\"/posts/:year\" component={PostList} />\n//                       <Route path=\"/posts\" component={PostList} />\n//                       <Route path=\"/post/write\" component={Write} />\n//                       <Route path=\"/post/:view\" component={Review} />\n//                       <Route path=\"/summary/:year/:month/:day\" component={Summary} />\n//                       <Route path=\"/summary\" component={Summary} />\n//                       <Route path=\"/setting\" component={Settings} />\n//                       <Route path=\"/signup\" component={SignUp} />\n//                       <Route path=\"/login\" component={NormalLoginForm} />\n//                       <Route path=\"/unsubscribe\" component={Unsubscribe} />\n//                       <Route component={NotFound} />\n//                     </Switch>\n//                   {/* // ) : (\n//                   //   <NormalLoginForm />\n//                   // )\n//                 } */}\n//               </Content>\n//               <Footer style={{ textAlign: 'center' }}>ㅁㅗㅇㄱㅡㄹ ©2019 Created by 한:글</Footer>\n//             </Layout>\n//           </Layout>\n//         </Fragment>\n//       </LoginContext.Provider>\n//     )          \n//   };\n// };\n// export default withRouter(App);","map":{"version":3,"sources":["E:/mongmong/DailySummary/client/src/App.js"],"names":["React","Component","Fragment","Home","HeaderLayout","Write","Route","Switch","Link","withRouter","Redirect","NormalLoginForm","PostList","NotFound","Settings","SignUp","Unsubscribe","Review","Summary","axios","LoginContext","Sider","Content","Footer","SubMenu","MonthPicker","config","require","App","constructor","props","setIsLogined","isLogined","setState","onCollapse","collapsed","console","log","pickedMonth","date","dateString","dateStr","replace","url","substring","history","push","pickedDate","showModal","visible","handleOk","e","preventDefault","stopPropagation","localStorage","removeItem","handleCancel","state","getItem","render","broken","type","writeBtnClicked","textAlign"],"mappings":"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":["import React, { Component, Fragment } from 'react'\r\nimport './App.scss'\r\nimport Home from './components/Home/Home'\r\nimport HeaderLayout from './components/HeaderLayout'\r\nimport Write from './components/Post/Write/Write'\r\nimport { Route, Switch, Link, withRouter, Redirect } from 'react-router-dom'\r\nimport NormalLoginForm from './components/Login/Login'\r\nimport { Modal, Layout, Menu, Icon, DatePicker } from 'antd'\r\nimport PostList from './components/Post/PostList/PostList'\r\nimport NotFound from './components/NotFound'\r\nimport Settings from './components/Settings'\r\nimport SignUp from './components/Login/SignUp'\r\nimport Unsubscribe from './components/Login/Unsubscribe'\r\nimport Review from './components/Post/Write/Review'\r\nimport Summary from './components/Post/Summary/Summary'\r\nimport axios from 'axios'\r\nimport { LoginContext } from './contexts/login'\r\n\r\nconst { Sider, Content, Footer } = Layout\r\nconst { SubMenu } = Menu\r\nconst { MonthPicker } = DatePicker;\r\n\r\nconst config = require('./config');\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      collapsed: false,\r\n      visible: false,\r\n      isLogined: localStorage.getItem('token') ? true : false,\r\n    }\r\n    // this.onChange = this.onChange.bind(this)\r\n    //this.showModal = this.showModal.bind(this)\r\n    //this.handleOk = this.handleOk.bind(this)\r\n    //this.handleCancel = this.handleCancel.bind(this)\r\n  }\r\n\r\n  setIsLogined = (isLogined) => {\r\n    this.setState({ isLogined })\r\n  }\r\n\r\n  onCollapse = (collapsed) => {\r\n    console.log(collapsed)\r\n    this.setState({ collapsed })\r\n  }\r\n\r\n  pickedMonth = (date, dateString) => {\r\n    const dateStr = dateString.replace(/-/g, '');\r\n    const url = '/posts/' + dateStr.substring( 0, 4 ) + \r\n                '/' + dateStr.substring( 4, 6 );\r\n    console.log(url);\r\n    this.props.history.push(url);\r\n  }\r\n\r\n  pickedDate = (date, dateString) => {\r\n    const dateStr = dateString.replace(/-/g, '');\r\n    const url = '/summary/' + dateStr.substring( 0, 4 ) + \r\n                '/' + dateStr.substring( 4, 6 ) + \r\n                '/' + dateStr.substring( 6, 8 );\r\n    console.log(url);\r\n    this.props.history.push(url);\r\n  }\r\n\r\n  showModal = () => {\r\n    console.log(\"showModal\");\r\n    this.setState({\r\n      visible: true,\r\n    });     \r\n  };\r\n\r\n  handleOk = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(e);\r\n    localStorage.removeItem(\"token\")\r\n    this.setState({\r\n      visible: false,\r\n      isLogined: false,\r\n    });\r\n    this.props.history.push('/')\r\n  };\r\n  \r\n  handleCancel = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log('cancel clicked');\r\n    console.log(this.state);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  // writeBtnClicked = e => {\r\n  //   console.log(e)\r\n  //   if(this.state.isLogined) {\r\n  //     this.props.history.push('/post/write')\r\n  //   } else {\r\n  //     this.props.history.push('/login')\r\n  //   }\r\n  // }\r\n\r\n  render () {\r\n    return (\r\n      <LoginContext.Provider value={{\r\n        setIsLogined: this.setIsLogined,\r\n      }}>\r\n        <Fragment>\r\n        {/* Sider, Header, Footer는 모든 화면에 보여진다.  */}\r\n          <Layout>\r\n            <Sider\r\n              breakpoint=\"lg\"\r\n              collapsedWidth=\"0\"\r\n              onBreakpoint={broken => {\r\n                console.log(broken)\r\n              }}\r\n              onCollapse={(collapsed, type) => {\r\n                console.log(collapsed, type)\r\n              }}\r\n              className=\"one-sidebar\"\r\n            >\r\n            <div className=\"one-menu-logo flex flex-center\"  >\r\n              <Link to=\"/\">\r\n                <span>몽 글</span>\r\n              </Link>\r\n            </div>\r\n              <Menu theme=\"light\" mode=\"inline\" className=\"one-nav\">\r\n                <Menu.Item key=\"1\" className=\"menuWrite\"  onClick={this.writeBtnClicked}>\r\n                  <Link to='/post/write'> \r\n                    <Icon type=\"form\" />\r\n                    <span className=\"nav-text\">글쓰기</span>\r\n                  </Link>\r\n                </Menu.Item>\r\n                <SubMenu\r\n                  key=\"Sub1\"\r\n                  title={\r\n                    <span>\r\n                      <Icon type=\"read\" />\r\n                      <span>본문</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key=\"2\">\r\n                      <MonthPicker\r\n                        onChange={this.pickedMonth}\r\n                        placeholder=\"Select month\" />\r\n                  <span className=\"nav-text\"></span>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu\r\n                  key=\"Sub2\"\r\n                  title={\r\n                    <span>\r\n                      <Icon type=\"edit\" />\r\n                      <span>요약</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key=\"3\">\r\n                      <DatePicker\r\n                        onChange={this.pickedDate}\r\n                      />\r\n                  <span className=\"nav-text\"></span>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"4\">\r\n                  <Link to=\"/setting\">\r\n                    <Icon type=\"setting\" />\r\n                    <span className=\"nav-text\">설정</span>\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"5\"\r\n                  className=\"one-logout\"\r\n                  onClick={this.showModal}\r\n                  >\r\n                    <Icon type=\"logout\" />\r\n                    <span className=\"nav-text\">\r\n                      로그아웃\r\n                    </span>\r\n                    <Modal\r\n                      title=\"Basic Modal\"\r\n                      visible={this.state.visible}\r\n                      onOk={this.handleOk}\r\n                      onCancel={this.handleCancel}\r\n                    >\r\n                      로그아웃 하시겠습니까?\r\n                    </Modal>   {/* 로그아웃 클릭시 로그인 버튼으로 전환 및 연동 부분 추가 */}\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout className=\"one-main\">\r\n              <HeaderLayout />\r\n              <Content className=\"Content-section-layout one-content\">\r\n                {\r\n                  this.state.isLogined ? ( \r\n                    <Switch>\r\n                      <Route exact path=\"/\" component={Home} />\r\n                      <Route path=\"/posts/:year/:month/:day\" component={PostList} />\r\n                      <Route path=\"/posts/:year/:month\" component={PostList} />\r\n                      <Route path=\"/posts/:year\" component={PostList} />\r\n                      <Route path=\"/posts\" component={PostList} />\r\n                      <Route path=\"/post/write\" component={Write} />\r\n                      <Route path=\"/post/:view\" component={Review} />\r\n                      <Route path=\"/summary/:year/:month/:day\" component={Summary} />\r\n                      <Route path=\"/summary\" component={Summary} />\r\n                      <Route path=\"/setting\" component={Settings} />\r\n                      <Route path=\"/signup\" component={SignUp} />\r\n                      <Route path=\"/login\" component={NormalLoginForm} />\r\n                      <Route path=\"/unsubscribe\" component={Unsubscribe} />\r\n                      <Route component={NotFound} />\r\n                    </Switch>\r\n                   ) : (\r\n                    <Switch>\r\n                      <Route exact path=\"/\" component={Home} />\r\n                      <Route path=\"/posts/:year/:month/:day\" component={NormalLoginForm} />\r\n                      <Route path=\"/posts/:year/:month\" component={NormalLoginForm} />\r\n                      <Route path=\"/posts/:year\" component={NormalLoginForm} />\r\n                      <Route path=\"/posts\" component={NormalLoginForm} />\r\n                      <Route path=\"/post/write\" component={NormalLoginForm} />\r\n                      <Route path=\"/post/:view\" component={NormalLoginForm} />\r\n                      <Route path=\"/summary/:year/:month/:day\" component={NormalLoginForm} />\r\n                      <Route path=\"/summary\" component={NormalLoginForm} />\r\n                      <Route path=\"/setting\" component={NormalLoginForm} />\r\n                      <Route path=\"/signup\" component={SignUp} />\r\n                      <Route path=\"/login\" component={NormalLoginForm} />\r\n                      <Route path=\"/unsubscribe\" component={NormalLoginForm} />\r\n                      <Route component={NotFound} />\r\n                    </Switch>\r\n                   )\r\n                }\r\n              </Content>\r\n              <Footer style={{ textAlign: 'center' }}>ㅁㅗㅇㄱㅡㄹ ©2019 Created by 한:글</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        </Fragment>\r\n      </LoginContext.Provider>\r\n    )          \r\n  };\r\n};\r\nexport default withRouter(App);\r\n\r\n\r\n//로그인, 로그아웃 등 기능하는 버젼/ 사이드바 메뉴 수정 전 임시 주석처리\r\n// import React, { Component, Fragment } from 'react'\r\n// import './App.scss'\r\n// import Home from './components/Home/Home'\r\n// import HeaderLayout from './components/HeaderLayout'\r\n// import Write from './components/Post/Write/Write'\r\n// import { Route, Switch, Link, withRouter, Redirect } from 'react-router-dom'\r\n// import NormalLoginForm from './components/Login/Login'\r\n// import { Modal, Layout, Menu, Icon, DatePicker } from 'antd'\r\n// import PostList from './components/Post/PostList/PostList'\r\n// import NotFound from './components/NotFound'\r\n// import Settings from './components/Settings'\r\n// import SignUp from './components/Login/SignUp'\r\n// import Unsubscribe from './components/Login/Unsubscribe'\r\n// import Review from './components/Post/Write/Review'\r\n// import Summary from './components/Post/Summary/Summary'\r\n// import axios from 'axios'\r\n// import { LoginContext } from './contexts/login'\r\n\r\n// const { Sider, Content, Footer } = Layout\r\n// const { SubMenu } = Menu\r\n// const { MonthPicker } = DatePicker;\r\n\r\n// const config = require('./config');\r\n\r\n// class App extends Component {\r\n\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       collapsed: false,\r\n//       visible: false,\r\n//       isLogined: localStorage.getItem('token') ? true : false,\r\n//     }\r\n//     // this.onChange = this.onChange.bind(this)\r\n//     //this.showModal = this.showModal.bind(this)\r\n//     //this.handleOk = this.handleOk.bind(this)\r\n//     //this.handleCancel = this.handleCancel.bind(this)\r\n//   }\r\n\r\n//   setIsLogined = (isLogined) => {\r\n//     this.setState({ isLogined })\r\n//   }\r\n\r\n//   onCollapse = (collapsed) => {\r\n//     console.log(collapsed)\r\n//     this.setState({ collapsed })\r\n//   }\r\n\r\n//   pickedMonth = (date, dateString) => {\r\n//     const dateStr = dateString.replace(/-/g, '');\r\n//     const url = '/posts/' + dateStr.substring( 0, 4 ) + \r\n//                 '/' + dateStr.substring( 4, 6 );\r\n//     console.log(url);\r\n//     this.props.history.push(url);\r\n//   }\r\n\r\n//   pickedDate = (date, dateString) => {\r\n//     const dateStr = dateString.replace(/-/g, '');\r\n//     const url = '/summary/' + dateStr.substring( 0, 4 ) + \r\n//                 '/' + dateStr.substring( 4, 6 ) + \r\n//                 '/' + dateStr.substring( 6, 8 );\r\n//     console.log(url);\r\n//     this.props.history.push(url);\r\n//   }\r\n\r\n//   showModal = () => {\r\n//     console.log(\"showModal\");\r\n//     this.setState({\r\n//       visible: true,\r\n//     });     \r\n//   };\r\n\r\n//   handleOk = e => {\r\n//     e.preventDefault();\r\n//     e.stopPropagation();\r\n//     console.log(e);\r\n//     localStorage.removeItem(\"token\")\r\n//     this.setState({\r\n//       visible: false,\r\n//       isLogined: false,\r\n//     });\r\n//     this.props.history.push('/')\r\n//   };\r\n  \r\n//   handleCancel = e => {\r\n//     e.preventDefault();\r\n//     e.stopPropagation();\r\n//     console.log('cancel clicked');\r\n//     console.log(this.state);\r\n//     this.setState({\r\n//       visible: false,\r\n//     });\r\n//   };\r\n\r\n//   render () {\r\n//     return (\r\n//       <LoginContext.Provider value={{\r\n//         setIsLogined: this.setIsLogined,\r\n//       }}>\r\n//         <Fragment>\r\n//         {/* Sider, Header, Footer는 모든 화면에 보여진다.  */}\r\n//           <Layout>\r\n//             <Sider\r\n//               breakpoint=\"lg\"\r\n//               collapsedWidth=\"0\"\r\n//               onBreakpoint={broken => {\r\n//                 console.log(broken)\r\n//               }}\r\n//               onCollapse={(collapsed, type) => {\r\n//                 console.log(collapsed, type)\r\n//               }}\r\n//               className=\"one-sidebar\"\r\n//             >\r\n//             <div className=\"one-menu-logo flex flex-center\"  >\r\n//               <Link to=\"/\">\r\n//                 <span>몽 글</span>\r\n//               </Link>\r\n//             </div>\r\n//               <Menu theme=\"light\" mode=\"inline\" className=\"one-nav\">\r\n//                 <Menu.Item key=\"1\">\r\n//                   <Link to=\"/post/write\">\r\n//                     <Icon type=\"form\" />\r\n//                     <span className=\"nav-text\">글쓰기</span>\r\n//                   </Link>\r\n//                 </Menu.Item>\r\n//                 <SubMenu\r\n//                   key=\"Sub1\"\r\n//                   title={\r\n//                     <span>\r\n//                       <Icon type=\"read\" />\r\n//                       <span>본문</span>\r\n//                     </span>\r\n//                   }\r\n//                 >\r\n//                   <Menu.Item key=\"2\">\r\n//                       <MonthPicker\r\n//                         onChange={this.pickedMonth}\r\n//                         placeholder=\"Select month\" />\r\n//                   <span className=\"nav-text\"></span>\r\n//                   </Menu.Item>\r\n//                 </SubMenu>\r\n//                 <SubMenu\r\n//                   key=\"Sub2\"\r\n//                   title={\r\n//                     <span>\r\n//                       <Icon type=\"edit\" />\r\n//                       <span>요약</span>\r\n//                     </span>\r\n//                   }\r\n//                 >\r\n//                   <Menu.Item key=\"3\">\r\n//                       <DatePicker\r\n//                         onChange={this.pickedDate}\r\n//                       />\r\n//                   <span className=\"nav-text\"></span>\r\n//                   </Menu.Item>\r\n//                 </SubMenu>\r\n//                 <Menu.Item key=\"4\">\r\n//                   <Link to=\"/setting\">\r\n//                     <Icon type=\"setting\" />\r\n//                     <span className=\"nav-text\">설정</span>\r\n//                   </Link>\r\n//                 </Menu.Item>\r\n//                 <Menu.Item key=\"5\"\r\n//                   className=\"one-logout\"\r\n//                   onClick={this.showModal}\r\n//                   >\r\n//                     <Icon type=\"logout\" />\r\n//                     <span className=\"nav-text\">\r\n//                       로그아웃\r\n//                     </span>\r\n//                     <Modal\r\n//                       title=\"Basic Modal\"\r\n//                       visible={this.state.visible}\r\n//                       onOk={this.handleOk}\r\n//                       onCancel={this.handleCancel}\r\n//                     >\r\n//                       로그아웃 하시겠습니까?\r\n//                     </Modal>   {/* 로그아웃 클릭시 로그인 버튼으로 전환 및 연동 부분 추가 */}\r\n//                 </Menu.Item>\r\n//               </Menu>\r\n//             </Sider>\r\n//             <Layout className=\"one-main\">\r\n//               <HeaderLayout />\r\n//               <Content className=\"Content-section-layout one-content\">\r\n//                 {/* {\r\n//                   this.state.isLogined ? (  */}\r\n//                     <Switch>\r\n//                       <Route exact path=\"/\" component={Home} />\r\n//                       <Route path=\"/posts/:year/:month/:day\" component={PostList} />\r\n//                       <Route path=\"/posts/:year/:month\" component={PostList} />\r\n//                       <Route path=\"/posts/:year\" component={PostList} />\r\n//                       <Route path=\"/posts\" component={PostList} />\r\n//                       <Route path=\"/post/write\" component={Write} />\r\n//                       <Route path=\"/post/:view\" component={Review} />\r\n//                       <Route path=\"/summary/:year/:month/:day\" component={Summary} />\r\n//                       <Route path=\"/summary\" component={Summary} />\r\n//                       <Route path=\"/setting\" component={Settings} />\r\n//                       <Route path=\"/signup\" component={SignUp} />\r\n//                       <Route path=\"/login\" component={NormalLoginForm} />\r\n//                       <Route path=\"/unsubscribe\" component={Unsubscribe} />\r\n//                       <Route component={NotFound} />\r\n//                     </Switch>\r\n//                   {/* // ) : (\r\n//                   //   <NormalLoginForm />\r\n//                   // )\r\n//                 } */}\r\n//               </Content>\r\n//               <Footer style={{ textAlign: 'center' }}>ㅁㅗㅇㄱㅡㄹ ©2019 Created by 한:글</Footer>\r\n//             </Layout>\r\n//           </Layout>\r\n//         </Fragment>\r\n//       </LoginContext.Provider>\r\n//     )          \r\n//   };\r\n// };\r\n// export default withRouter(App);"]},"metadata":{},"sourceType":"module"}
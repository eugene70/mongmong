{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"E:\\\\mongmong\\\\DailySummary\\\\client\\\\src\\\\components\\\\Post\\\\Write\\\\Write.js\";\n// //AI서버와 테스트용\n// import React, { Component } from 'react';\n// import { Input, Button, Modal } from 'antd';\n// import LiveClock from './LiveClock';\n// import Emotion from './Emotion';\n// import { withRouter } from 'react-router';\n// import axios from 'axios';\n// const { TextArea } = Input;\n// const config = require('../../../config');\n// class Write extends Component {\n//   constructor(props) {\n//     super(props) \n//     this.state = {\n//       visible: false,\n//       paragraph: \"\",\n//       affectivity: \"\",\n//       keyword: \"\",\n//       onesentence: \"\",\n//     }\n//     this.paragraphChanged = this.paragraphChanged.bind(this)\n//     this.selectedEmotion = this.selectedEmotion.bind(this)\n//   }  \n//   showModal = () => {\n//     this.setState({\n//       visible: true,\n//     });\n//   };\n//   handleOk = e => { \n//     axios.post(config.aiServer + \"/summary\", {\n//       // paragraph: this.state.paragraph,\n//       // affectivity: this.state.affectivity,\n//       text: [this.state.paragraph],\n//       emotion: Number(this.state.affectivity),\n//     })\n//     .then((response) => {       \n//       console.log(response) \n//       this.setState({\n//         visible: true,\n//         // paragraph: \"\",\n//         // affectivity: \"\",\n//         keyword: response.data.keyword,\n//         onesentence: response.data.onesentence,       \n//       })\n//       // this.props.history.push('/posts')       \n//     })\n//     .catch((error) => {\n//       alert(\"에러 발생: \" + error.message)\n//       console.error(error)\n//     })\n//   }\n//   handleCancel = e => {\n//     console.log(e);\n//     this.setState({\n//       visible: false,\n//     });\n//   };\n//   paragraphChanged(event) {\n//     this.setState({\n//       paragraph: event.target.value,\n//     })\n//   }\n//   selectedEmotion(e) {\n//     this.setState({\n//       affectivity: e.target.value\n//     })\n//   }\n//   render() {\n//     return (\n//       <div className=\"one-post-write\">\n//         <div className=\"one-liveClock-container\">\n//           <LiveClock />\n//         </div> \n//         <TextArea className=\"one-textarea\" \n//           placeholder=\"...그래서 오늘은 어땠어?\"\n//           value={this.state.paragraph}\n//           onChange={this.paragraphChanged}  />\n//         <div className=\"one-post-btn-container flex\">\n//           <Emotion clickHandler={this.selectedEmotion}/>\n//           <Button type=\"primary\" onClick={this.handleOk} className=\"btn btn-submit\">저장</Button>\n//           <Modal title=\"글이 완성되었습니다.\" visible={this.state.visible} onOk={this.handleOk} onCancel={this.handleCancel} >\n// {/*  리뷰 페이지로 이동 */}\n//             {\"키워드: \" + this.state.keyword + \"    \\n\" +\n//              \"한줄: \" + this.state.onesentence}\n//           </Modal>       \n//         </div>\n//       </div>\n//     )\n//   }\n// }\n// export default withRouter(Write) \n// server랑 연결 원본\nimport React, { Component } from 'react';\nimport LiveClock from './LiveClock';\nimport Emotion from './Emotion';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nconst TextArea = _Input.TextArea;\n\nconst config = require('../../../config');\n\nclass Write extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(this.state);\n      axios.post(config.serverUrl + \"/api/post_input\", {\n        params: {\n          paragraph: this.state.paragraph,\n          strength_of_feeling: this.state.affectivity\n        }\n      }, {\n        headers: {\n          token: localStorage.token\n        }\n      }).then(response => {\n        console.log(this.state);\n        alert(\"당신의 소중한 하루가 저장되었습니다.\");\n        this.setState({\n          visible: false,\n          paragraph: \"\",\n          affectivity: \"\"\n        });\n        this.props.history.push('/posts');\n      }).catch(error => {\n        alert(\"에러 발생: \" + error.message);\n        console.error(error);\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false,\n      paragraph: \"\",\n      affectivity: \"\"\n    };\n    this.paragraphChanged = this.paragraphChanged.bind(this);\n    this.selectedEmotion = this.selectedEmotion.bind(this);\n  }\n\n  paragraphChanged(event) {\n    this.setState({\n      paragraph: event.target.value\n    });\n  }\n\n  selectedEmotion(e) {\n    this.setState({\n      affectivity: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"one-post-write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one-liveClock-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(LiveClock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(TextArea, {\n      className: \"one-textarea\",\n      placeholder: \"...\\uADF8\\uB798\\uC11C \\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uC5B4?\",\n      value: this.state.paragraph,\n      onChange: this.paragraphChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"one-post-btn-container flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Emotion, {\n      clickHandler: this.selectedEmotion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      className: \"btn btn-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"\\uC800\\uC7A5\"), React.createElement(_Modal, {\n      title: \"\\uAE00\\uC774 \\uC644\\uC131\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"\\uC800\\uC7A5\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\")));\n  }\n\n}\n\nexport default withRouter(Write);","map":{"version":3,"sources":["E:/mongmong/DailySummary/client/src/components/Post/Write/Write.js"],"names":["React","Component","LiveClock","Emotion","withRouter","axios","TextArea","config","require","Write","constructor","props","showModal","setState","visible","handleOk","e","console","log","state","post","serverUrl","params","paragraph","strength_of_feeling","affectivity","headers","token","localStorage","then","response","alert","history","push","catch","error","message","handleCancel","paragraphChanged","bind","selectedEmotion","event","target","value","render"],"mappings":"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","sourcesContent":["// //AI서버와 테스트용\r\n\r\n// import React, { Component } from 'react';\r\n// import { Input, Button, Modal } from 'antd';\r\n// import LiveClock from './LiveClock';\r\n// import Emotion from './Emotion';\r\n// import { withRouter } from 'react-router';\r\n// import axios from 'axios';\r\n\r\n// const { TextArea } = Input;\r\n// const config = require('../../../config');\r\n\r\n// class Write extends Component {\r\n//   constructor(props) {\r\n//     super(props) \r\n\r\n//     this.state = {\r\n//       visible: false,\r\n//       paragraph: \"\",\r\n//       affectivity: \"\",\r\n//       keyword: \"\",\r\n//       onesentence: \"\",\r\n//     }\r\n//     this.paragraphChanged = this.paragraphChanged.bind(this)\r\n//     this.selectedEmotion = this.selectedEmotion.bind(this)\r\n//   }  \r\n  \r\n//   showModal = () => {\r\n//     this.setState({\r\n//       visible: true,\r\n//     });\r\n//   };\r\n\r\n//   handleOk = e => { \r\n//     axios.post(config.aiServer + \"/summary\", {\r\n//       // paragraph: this.state.paragraph,\r\n//       // affectivity: this.state.affectivity,\r\n//       text: [this.state.paragraph],\r\n//       emotion: Number(this.state.affectivity),\r\n//     })\r\n//     .then((response) => {       \r\n//       console.log(response) \r\n//       this.setState({\r\n//         visible: true,\r\n//         // paragraph: \"\",\r\n//         // affectivity: \"\",\r\n//         keyword: response.data.keyword,\r\n//         onesentence: response.data.onesentence,       \r\n//       })\r\n//       // this.props.history.push('/posts')       \r\n//     })\r\n//     .catch((error) => {\r\n//       alert(\"에러 발생: \" + error.message)\r\n//       console.error(error)\r\n//     })\r\n//   }\r\n\r\n//   handleCancel = e => {\r\n//     console.log(e);\r\n//     this.setState({\r\n//       visible: false,\r\n//     });\r\n//   };\r\n\r\n//   paragraphChanged(event) {\r\n//     this.setState({\r\n//       paragraph: event.target.value,\r\n//     })\r\n//   }\r\n\r\n//   selectedEmotion(e) {\r\n//     this.setState({\r\n//       affectivity: e.target.value\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n\r\n//     return (\r\n//       <div className=\"one-post-write\">\r\n//         <div className=\"one-liveClock-container\">\r\n//           <LiveClock />\r\n//         </div> \r\n//         <TextArea className=\"one-textarea\" \r\n//           placeholder=\"...그래서 오늘은 어땠어?\"\r\n//           value={this.state.paragraph}\r\n//           onChange={this.paragraphChanged}  />\r\n//         <div className=\"one-post-btn-container flex\">\r\n//           <Emotion clickHandler={this.selectedEmotion}/>\r\n//           <Button type=\"primary\" onClick={this.handleOk} className=\"btn btn-submit\">저장</Button>\r\n//           <Modal title=\"글이 완성되었습니다.\" visible={this.state.visible} onOk={this.handleOk} onCancel={this.handleCancel} >\r\n// {/*  리뷰 페이지로 이동 */}\r\n//             {\"키워드: \" + this.state.keyword + \"    \\n\" +\r\n//              \"한줄: \" + this.state.onesentence}\r\n//           </Modal>       \r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n// export default withRouter(Write) \r\n\r\n\r\n\r\n// server랑 연결 원본\r\nimport React, { Component } from 'react';\r\nimport { Input, Button, Modal } from 'antd';\r\nimport LiveClock from './LiveClock';\r\nimport Emotion from './Emotion';\r\nimport { withRouter } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst { TextArea } = Input;\r\nconst config = require('../../../config');\r\n\r\nclass Write extends Component {\r\n  constructor(props) {\r\n    super(props) \r\n\r\n    this.state = {\r\n      visible: false,\r\n      paragraph: \"\",\r\n      affectivity: \"\",\r\n    }\r\n    this.paragraphChanged = this.paragraphChanged.bind(this)\r\n    this.selectedEmotion = this.selectedEmotion.bind(this)\r\n  }  \r\n  \r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = e => { \r\n    console.log(this.state)\r\n    axios.post(config.serverUrl + \"/api/post_input\",\r\n      {\r\n        params : { paragraph: this.state.paragraph,\r\n                  strength_of_feeling: this.state.affectivity},\r\n      },\r\n      {\r\n        headers: { token: localStorage.token },\r\n      })\r\n     .then((response) => {       \r\n      console.log(this.state)  \r\n      alert(\"당신의 소중한 하루가 저장되었습니다.\")  \r\n      this.setState({\r\n        visible: false,\r\n        paragraph: \"\",\r\n        affectivity: \"\",     \r\n      })\r\n      this.props.history.push('/posts')       \r\n    })\r\n    .catch((error) => {\r\n      alert(\"에러 발생: \" + error.message)\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  paragraphChanged(event) {\r\n    this.setState({\r\n      paragraph: event.target.value,\r\n    })\r\n  }\r\n\r\n  selectedEmotion(e) {\r\n    this.setState({\r\n      affectivity: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"one-post-write\">\r\n        <div className=\"one-liveClock-container\">\r\n          <LiveClock />\r\n        </div> \r\n        <TextArea className=\"one-textarea\" \r\n          placeholder=\"...그래서 오늘은 어땠어?\"\r\n          value={this.state.paragraph}\r\n          onChange={this.paragraphChanged}  />\r\n        <div className=\"one-post-btn-container flex\">\r\n          <Emotion clickHandler={this.selectedEmotion}/>\r\n          <Button type=\"primary\" onClick={this.showModal} className=\"btn btn-submit\">저장</Button>\r\n          <Modal title=\"글이 완성되었습니다.\" visible={this.state.visible} onOk={this.handleOk} onCancel={this.handleCancel} >\r\n{/*  리뷰 페이지로 이동 */}\r\n              저장하시겠습니까?\r\n          </Modal>       \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Write) "]},"metadata":{},"sourceType":"module"}